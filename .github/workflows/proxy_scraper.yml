name: Proxy Scraper and Validator

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *' # 每天 UTC 0 点运行

jobs:
  scrape_proxies:
    runs-on: ubuntu-latest
    timeout-minutes: 15 # 增加超时时间，因为浏览器操作可能耗时更长

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        persist-credentials: true
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # 这里移除 playwright install chromium 和 playwright install-deps
        # 我们会在下一个缓存步骤中处理

    # --- 新增的缓存步骤 ---
    - name: Cache Playwright browsers
      uses: actions/cache@v3 # 使用缓存 Action
      with:
        path: ~/.cache/ms-playwright # Playwright 默认的浏览器缓存路径
        key: ${{ runner.os }}-playwright-${{ hashFiles('requirements.txt') }} # 缓存的key
        # 如果requirements.txt变化，或者操作系统变化，缓存就会失效，重新下载
        restore-keys: |
          ${{ runner.os }}-playwright- # 恢复keys，为了兼容旧版本缓存

    - name: Install Playwright browsers and system dependencies
      run: |
        playwright install chromium # 只有当缓存未命中时才会真正下载
        playwright install-deps    # 安装系统依赖

    - name: Run proxy scraper
      run: |
        python proxy_scraper.py

    - name: Commit and Push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        
        if git diff --exit-code --quiet data/; then
          echo "No changes in data/ directory. Skipping commit."
        else
          git add data/
          git commit -m "chore: Auto-update collected proxy data [skip ci]"
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
