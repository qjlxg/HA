name: Proxy Scraper

on:
  schedule:
    # 每天凌晨 0 点 UTC 运行
    - cron: '0 0 * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  scrape-proxies:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9' # 或更高版本，例如 '3.10', '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 移除了 GeoLite2 数据库下载步骤，因为你已手动放置

    - name: Run proxy scraper
      run: python proxy_scraper.py

    - name: Upload collected nodes
      uses: actions/upload-artifact@v4
      with:
        name: collected-nodes
        path: data/all.txt

    - name: Upload node counts CSV
      uses: actions/upload-artifact@v4
      with:
        name: node-counts
        path: data/node_counts.csv

    - name: Upload protocol stats CSV
      uses: actions/upload-artifact@v4
      with:
        name: protocol-stats
        path: data/protocol_stats.csv

    - name: Upload individual URL contents
      uses: actions/upload-artifact@v4
      with:
        name: url-contents
        path: data/*.txt
        # 如果 data 目录下有很多文件，或者文件名过长，需要注意 GitHub Actions 的文件/路径长度限制

    - name: Commit and push results (optional)
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@github.com"
        git add data/all.txt data/node_counts.csv data/protocol_stats.csv data/*.txt # 添加所有生成的文件
        git commit -m "Update collected proxy nodes, stats, and protocol counts" || echo "No changes to commit"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GITHUB_TOKEN 是 GitHub 提供的默认 token，具有写入权限
