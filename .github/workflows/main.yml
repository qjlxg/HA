name: Nodes

# 定义触发事件
on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发
    paths:    # 只有以下路径中的文件发生变动时才触发
      - '.github/workflows/nodes.yml'
      - 'deduplication_module.py'
      - 'data/GeoLite2-Country.mmdb' # 如果此文件也提交到仓库，并且其变动也应触发
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 00:00 运行
  workflow_dispatch:   # 支持手动触发

# 定义环境变量
env:
  PYTHON_VERSION: '3.10'  # 指定 Python 版本

jobs:
  process-nodes:
    runs-on: ubuntu-latest  # 使用 GitHub 提供的最新 Ubuntu 运行器

    steps:
      # 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # 安装所有依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install geoip2 aiofiles httpx pyyaml beautifulsoup4

      # 创建必要的目录（如果不存在）
      - name: Create data and sub directories
        run: |
          mkdir -p data
          mkdir -p sub
          
      # 重要的 GeoLite2 数据库提醒：
      # 请确保 GeoLite2-Country.mmdb 文件已经放置在您的仓库的 'data/' 目录下，
      # 因为 GitHub Actions 运行器每次都会从头开始克隆仓库。
      # 根据您的要求，这里不添加下载数据库的步骤。

      # 运行节点处理和去重脚本
      # 已将原先重复的 deduplication_module.py 运行合并为一次。
      - name: Run node processing and deduplication script
        run: python deduplication_module.py

      # 检查输出文件并提交更改
      - name: Commit processed nodes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # 关键修复：在推送前拉取最新更改并rebase，以解决远程拒绝推送的问题
          git pull --rebase origin main
          
          # 添加 sub 目录下的去重节点文件
          git add sub/deduplicated_nodes.txt
          # 添加 data 目录下的 dns_cache.json 文件
          git add sub/dns_cache.json
          
          # 检查是否有更改并提交
          # 只有当有实际文件更改时才执行 commit
          git diff-index --quiet HEAD || git commit -m "Update processed nodes and DNS cache"
          
          # 推送到远程仓库
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
